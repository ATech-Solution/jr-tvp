apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'androidx.navigation.safeargs.kotlin'

def props = new Properties()
props.load(new FileInputStream(file("$rootProject.projectDir/app/config.properties")))

android {
    compileSdkVersion versions.compileSdk

    def versionCodeFile = file("$rootProject.projectDir/version.properties")
    def code = 1

    if (versionCodeFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionCodeFile))
        code = versionProps['VERSION_CODE'].toInteger()
    }

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode code
        versionName "0.0." + code.toString()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"
    productFlavors {
        development {
            dimension "env"
            resValue "string", "app_name", "@string/app_name_dev"
        }
        staging {
            dimension "env"
            resValue "string", "app_name", "@string/app_name_staging"
        }
        production {
            dimension "env"
            resValue "string", "app_name", "@string/app_name_prod"
        }
    }
}