buildscript {
    ext {
        kotlin_version = '1.6.21'
    }

    dependencies {
        def nav_version = "2.5.1"
        def google_service_version = "4.3.8"
        def firebase_version = "2.7.1"
        def detekt_version = "1.20.0"

        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath "com.google.gms:google-services:$google_service_version"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebase_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
}

allprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        toolVersion = "1.20.0"
        allRules = true
    }

    tasks.named("detekt").configure {
        reports {
            xml.required.set(false)
            txt.required.set(false)
            sarif.required.set(false)

            html.required.set(true)
            html.outputLocation.set(file("$project.rootDir/build/reports/detekt.html"))
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.register('increment_version') {
    def versionFile = file('version.properties')
    if (versionFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionFile.newWriter(), null)
    } else {
        throw new GradleException("File not found")
    }
}

apply from: "buildsystem/dependencies.gradle"